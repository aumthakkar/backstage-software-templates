name: ${{values.app_name}}-cicd
on:
  push:
    paths:
        - src/**
    branches:
        - master # changed this from main as that's the Backstage default branch. Can change it in publish:github action in template.yaml

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Shorten the commit id to first 6 characters
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }} 
          password: ${{ '${{ secrets.DOCKERHUB_TOKEN }}' }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: aumthakkar/${{values.app_name}}:${{ '${{ env.COMMIT_ID }}' }}
    
    outputs:
      commit_id: ${{ '${{ env.COMMIT_ID }}' }}

  cd:
    needs: ci
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3 # This step clones our argocd synced github repo first before committing to our values.yaml file below

      - name: Update Image tag in argocd monitored charts/${{values.app_name}}/values-${{values.app_env}}.yaml file on github
        shell: bash
        run: |
          echo ${{ '${{needs.ci.outputs.commit_id}}' }}
          pip install yq
          yq -Yi '.image.tag = "${{'${{needs.ci.outputs.commit_id}}' }}"' charts/${{values.app_name}}/values-${{values.app_env}}.yaml
      
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updates charts/${{values.app_name}}/${{values.app_env}} with latest docker image push commit ${{ '${{needs.ci.outputs.commit_id}}' }}'

      - name: Install Argocd # To run the argocd app sync <application> argocd CLI 
        shell: bash
        run: |
          curl -ksSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd
          
      - name: Argocd app sync
        shell: bash
        run: |        
          argocd login argocd-server.argocd \
          --insecure \
          --grpc-web \
          --username admin \
          --password ${{ '${{ secrets.ARGOCD_PASSWORD }}' }}

          argocd app sync ${{values.app_name}} 

